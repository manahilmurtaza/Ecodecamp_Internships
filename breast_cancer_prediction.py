# -*- coding: utf-8 -*-
"""Breast Cancer Prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AQUEPfP0PsoTolI-fPQHrcSSMO9P3zrx
"""

import pandas as pd
import numpy as np
import sklearn.datasets as datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""**Data Colection & Preprocessing**"""

breast_cancer_dataset = pd.read_csv('/data.csv')

breast_cancer_dataset = datasets.load_breast_cancer()

print(breast_cancer_dataset)

data_frame = pd.DataFrame (breast_cancer_dataset.data, columns = breast_cancer_dataset.feature_names)

data_frame.head()

data_frame['label'] = breast_cancer_dataset.target

data_frame.tail() # last 5 rows

data_frame.shape

data_frame.info()

data_frame.isnull().sum()

data_frame['label'].value_counts()  #357 benign cases 212 malignant cases

"""1---  Benign
0---- Maligant
"""

data_frame.groupby('label').mean()

"""**Seperating Features & Target Variables**"""

X = data_frame.drop(columns = 'label', axis = 1)
Y = data_frame['label']

print(X)

print(Y)

"""# **Training & Testing of dataset**"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 2)

print(X.shape, X_train.shape, X_test.shape)

print(Y.shape, Y_train.shape, Y_test.shape)

"""**Logistic Regression**"""

model = LogisticRegression()

model.fit(X_train, Y_train)

X_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(Y_train, X_prediction)

print('Accuracy on training data = ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(Y_test, X_test_prediction)

print('Accuracy of testing data = ', test_data_accuracy)

"""# **BUILDING A PREDICTIVE SYSTEM**"""

input_data = (13.08,15.71,85.63,520,0.1075,0.127,0.04568,0.0311,0.1967,0.06811,0.1852,0.7477,1.383,14.67,0.004097,0.01898,0.01698,0.00649,0.01678,0.002425,14.5,20.49,96.09,630.5,0.1312,0.2776,0.189,0.07283,0.3184,0.08183)

input_data_as_numpy_array = np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0] == 0):
  print('The Breast cancer is Malignant')

else:
  print('The Breast Cancer is Benign')